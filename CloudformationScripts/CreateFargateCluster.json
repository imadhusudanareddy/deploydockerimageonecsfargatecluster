{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "The CloudFormation template for the Fargate ECS Cluster.",
    "Parameters": {
        "Stage": {
            "Type": "String"
        },
        "ContainerPort": {
            "Type": "Number"
        },
        "ImageURI": {
            "Type": "String"
        }
    },
    "Resources": {
        "WebCluster": {
            "Type": "AWS::ECS::Cluster",
            "Properties": {
                "ClusterName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "Stage"
                            },
                            {
                                "Ref": "AWS::AccountId"
                            },
                            "WebCluster"
                        ]
                    ]
                }
            }
        },
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "172.10.0.0/16",
                "EnableDnsHostnames": true,
                "EnableDnsSupport": true
            }
        },
        "SubnetA": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": "172.10.1.0/24",
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::Region"
                            },
                            "a"
                        ]
                    ]
                }
            }
        },
        "SubnetB": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": "172.10.2.0/24",
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::Region"
                            },
                            "b"
                        ]
                    ]
                }
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "VPCInternetGatewayAttachment",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "SubnetAPublicRouteAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "SubnetA"
                }
            }
        },
        "SubnetBPublicRouteAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "SubnetB"
                }
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway"
        },
        "VPCInternetGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "ExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "Stage"
                            },
                            {
                                "Ref": "AWS::AccountId"
                            },
                            "ExecutionRole"
                        ]
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ecs-tasks.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
                ]
            }
        },
        "TaskDefinition": {
            "Type": "AWS::ECS::TaskDefinition",
            "Properties": {
                "Memory": 1024,
                "Cpu": 512,
                "NetworkMode": "awsvpc",
                "RequiresCompatibilities": [
                    "FARGATE"
                ],
                "TaskRoleArn": {
                    "Ref": "ExecutionRole"
                },
                "ExecutionRoleArn": {
                    "Ref": "ExecutionRole"
                },
                "ContainerDefinitions": [
                    {
                        "Name": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "Stage"
                                    },
                                    {
                                        "Ref": "AWS::AccountId"
                                    },
                                    "Container"
                                ]
                            ]
                        },
                        "Image": {
                            "Ref": "ImageURI"
                        },
                        "PortMappings": [
                            {
                                "ContainerPort": {
                                    "Ref": "ContainerPort"
                                },
                                "HostPort": {
                                    "Ref": "ContainerPort"
                                }
                            }
                        ]
                    }
                ]
            }
        },
        "LoadBalancerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "Stage"
                            },
                            {
                                "Ref": "AWS::AccountId"
                            },
                            "LoadBalancerSecurityGroup"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 80,
                        "ToPort": 80,
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "ContainerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "Stage"
                            },
                            {
                                "Ref": "AWS::AccountId"
                            },
                            "ContainerSecurityGroup"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": {
                            "Ref": "ContainerPort"
                        },
                        "ToPort": {
                            "Ref": "ContainerPort"
                        },
                        "SourceSecurityGroupId": {
                            "Ref": "LoadBalancerSecurityGroup"
                        }
                    }
                ]
            }
        },
        "LoadBalancer": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "IpAddressType": "ipv4",
                "Name": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "Stage"
                            },
                            {
                                "Ref": "AWS::AccountId"
                            },
                            "LoadBalancer"
                        ]
                    ]
                },
                "Scheme": "internet-facing",
                "SecurityGroups": [
                    {
                        "Ref": "LoadBalancerSecurityGroup"
                    }
                ],
                "Subnets": [
                    {
                        "Ref": "SubnetA"
                    },
                    {
                        "Ref": "SubnetB"
                    }
                ],
                "Type": "application"
            }
        },
        "TargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "Name": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "Stage"
                            },
                            {
                                "Ref": "AWS::AccountId"
                            },
                            "TargetGroup"
                        ]
                    ]
                },
                "Port": 80,
                "Protocol": "HTTP",
                "TargetType": "ip",
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "LoadBalancerListener": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "DefaultActions": [
                    {
                        "TargetGroupArn": {
                            "Ref": "TargetGroup"
                        },
                        "Type": "forward"
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "LoadBalancer"
                },
                "Port": 80,
                "Protocol": "HTTP"
            }
        },
        "ECSService": {
            "Type": "AWS::ECS::Service",
            "DependsOn": "LoadBalancerListener",
            "Properties": {
                "ServiceName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "Stage"
                            },
                            {
                                "Ref": "AWS::AccountId"
                            },
                            "ECSService"
                        ]
                    ]
                },
                "Cluster": {
                    "Ref": "WebCluster"
                },
                "TaskDefinition": {
                    "Ref": "TaskDefinition"
                },
                "DesiredCount": 2,
                "LaunchType": "FARGATE",
                "NetworkConfiguration": {
                    "AwsvpcConfiguration": {
                        "AssignPublicIp": "ENABLED",
                        "Subnets": [
                            {
                                "Ref": "SubnetA"
                            },
                            {
                                "Ref": "SubnetB"
                            }
                        ],
                        "SecurityGroups": [
                            {
                                "Ref": "ContainerSecurityGroup"
                            }
                        ]
                    }
                },
                "LoadBalancers": [
                    {
                        "ContainerName": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "Stage"
                                    },
                                    {
                                        "Ref": "AWS::AccountId"
                                    },
                                    "Container"
                                ]
                            ]
                        },
                        "ContainerPort": {
                            "Ref": "ContainerPort"
                        },
                        "TargetGroupArn": {
                            "Ref": "TargetGroup"
                        }
                    }
                ]
            }
        }
    }
}